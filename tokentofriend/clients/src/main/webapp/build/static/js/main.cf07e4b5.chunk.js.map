{"version":3,"sources":["component/retrieveToken.js","component/App.js","reportWebVitals.js","component/santaGameCreated.js","index.js"],"names":["retrieveToken","props","queryToken","queryInfo","JSON","stringify","state","tokenId","reEmail","console","log","endPoint","axios","post","then","response","data","setState","callback","peerNodes","label","storageNode","storageNodeue","handleChange","bind","handleSubmit","get","peerList","peers","nodeList","map","node","push","event","this","target","name","value","preventDefault","className","Container","src","alt","width","Row","Col","md","offset","to","onSubmit","onChange","option","type","React","Component","App","seEmail","message","tokenInfo","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.cf07e4b5.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Row } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\nclass retrieveToken extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tokenId:'',\r\n      reEmail:'',\r\n      peerNodes:[{\r\n        label: \"C=CN,L=Beijing,O=AsiaEast\",\r\n        storageNode: \"C=CN,L=Beijing,O=AsiaEast\",\r\n      },\r\n      {\r\n        label: \"C=US,L=New York,O=USEast3\",\r\n        storageNodeue: \"C=US,L=New York,O=USEast3\",\r\n      },\r\n      {\r\n        label: \"C=US,L=San Diego,O=USWest1\",\r\n        storageNode: \"C=US,L=San Diego,O=USWest1\",\r\n      },],\r\n      endPoint:'10050',\r\n      storageNode:'BankA',\r\n      callback:''};\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      axios.get('http://localhost:10050/peers', {\"headers\": {\"content-type\": \"application/json\",}})\r\n       .then(\r\n         response => {\r\n          //  console.log(response.data)\r\n           const peerList = response.data.peers\r\n           console.log(peerList)\r\n           const nodeList = []\r\n           peerList.map((node)=>(\r\n            nodeList.push({label:node,storageNode:node})\r\n           ))\r\n           console.log(nodeList)\r\n           console.log(\"--\")\r\n           console.log(this.state.peerNodes)\r\n           this.setState({\r\n             peerNodes:nodeList\r\n          });\r\n          }\r\n         );\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n      // console.log('A token was submitted: \\nSender: '+ this.state.seEmail+'\\nReceiver: '+this.state.reEmail+'\\nMessage'+this.state.message);\r\n      console.log(this.state.storageNode);\r\n      if (this.state.storageNode == 'C=CN,L=Beijing,O=AsiaEast'){\r\n        console.log('10051')\r\n        this.setState({endPoint:'10051'}, this.queryToken);\r\n      }else if(this.state.storageNode == 'C=US,L=New York,O=USEast3'){\r\n        console.log('10052')\r\n        this.setState({endPoint : '10052'}, this.queryToken);\r\n      }else if(this.state.storageNode == 'C=US,L=San Diego,O=USWest1'){\r\n        console.log('10053')\r\n        this.setState({endPoint : '10053'}, this.queryToken);\r\n      }\r\n      event.preventDefault();\r\n    }\r\n\r\n    queryToken = () => {\r\n      const queryInfo = JSON.stringify({ \r\n        \"tokenId\": this.state.tokenId,\r\n        \"recipientEmail\": this.state.reEmail        \r\n       });\r\n       console.log(queryInfo);\r\n       console.log(`http://localhost:${this.state.endPoint}/retrieve`)    \r\n       axios.post(`http://localhost:${this.state.endPoint}/retrieve`, queryInfo, {\"headers\": {\"content-type\": \"application/json\",}})\r\n       .then(\r\n         response => {\r\n           console.log(response.data)\r\n           this.setState({callback:response.data})\r\n          }\r\n         );\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div className=\"retrieveToken\">\r\n          <Container>\r\n            <img src=\"https://www.corda.net/wp-content/uploads/2016/11/fg005_corda_b.png\" alt=\"Corda\" width=\"200\" className=\"App-logo\"/>\r\n            <Row>\r\n              <Col md=\"auto\"><h1>CorDapp Token-To-Friend</h1></Col>\r\n              <Col md={{offset:2}}><Link to=\"/\" ><button className=\"btn btn-primary\" >Create a Token</button></Link> <button className=\"btn btn-primary disabled\" >Retrieve a Token</button></Col>\r\n            </Row>\r\n            <p>In this example CorDapp, you will be able to issue your friend a token that carries a secret message.\r\n              You will receive the information of the tokenID and where the token is stored. Your friend would need these\r\n              information to retrieve the token and reveal the secret message.</p>\r\n              <p>If you are retrieving a token, please click the Retrieve Token button above to continue. ↗️ </p>\r\n          </Container>\r\n          <Container>\r\n            <h4>Retrieve the Secret Message: </h4>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Storage Node\r\n                </label>\r\n                <select value={this.state.storageNode} name=\"storageNode\" onChange={this.handleChange} className=\"form-control\">\r\n                  {this.state.peerNodes.map((option) => (\r\n                    <option value={option.storageNode}>{option.label}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Token ID</label>\r\n                <input\r\n                  type=\"text\"  className=\"form-control\" name=\"tokenId\" onChange={this.handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Recipient's Email Address\r\n                </label>\r\n                <input\r\n                  type=\"text\"  className=\"form-control\" name=\"reEmail\" onChange={this.handleChange} />\r\n              </div>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-10\" />\r\n                <div className=\"col\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Container>\r\n          <Container>\r\n            {this.state.callback != '' &&\r\n              <div>\r\n                <h4>Here is your query result: </h4>\r\n                <p>{this.state.callback}</p>\r\n              </div>\r\n                  }\r\n          </Container>\r\n\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default retrieveToken;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport '../css/App.css';\r\nimport retrieveToken from './retrieveToken';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Row } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seEmail:'',\r\n      reEmail:'',\r\n      message:'',\r\n      callback:''};\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n      console.log('A token was submitted: \\nSender: '+ this.state.seEmail+'\\nReceiver: '+this.state.reEmail+'\\nMessage'+this.state.message);\r\n      const tokenInfo = JSON.stringify({\r\n        \"senderEmail\": this.state.seEmail,\r\n        \"recipientEmail\": this.state.reEmail,\r\n        \"secretMessage\": this.state.message\r\n      });\r\n      console.log(tokenInfo);\r\n\r\n      axios.post('http://localhost:10050/createToken', tokenInfo, {\"headers\": {\"content-type\": \"application/json\",}})\r\n      .then(\r\n        response => {\r\n          console.log(response.data)\r\n          this.setState({\r\n            callback: response.data\r\n          });\r\n          //  alert('You have just created a token for your friend! He will be able to collect the secret message using the Token Id and Storage Node information.'+response.data);\r\n        }\r\n      );\r\n\r\n      event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div className=\"App\">\r\n          <Container>\r\n            <img src=\"https://www.corda.net/wp-content/uploads/2016/11/fg005_corda_b.png\" alt=\"Corda\" width=\"200\" className=\"App-logo\"/>\r\n            <Row>\r\n              <Col md=\"auto\"><h1>CorDapp Token-To-Friend</h1></Col>\r\n              <Col md={{offset:2}}><button className=\"btn btn-primary disabled\" >Create a Token</button> <Link to=\"/retrieveToken\" ><button className=\"btn btn-primary\" >Retrieve a Token</button></Link></Col>\r\n            </Row>\r\n            <p>In this example CorDapp, you will be able to issue your friend a token that carries a secret message.\r\n              You will receive the information of the tokenID and where the token is stored. Your friend would need these\r\n              information to retrieve the token and reveal the secret message.</p>\r\n            <p>If you are retrieving a token, please click the Retrieve Token button above to continue. ↗️ </p>\r\n          </Container>\r\n          <Container>\r\n            <br />\r\n            <h4>Send a token to a friend: </h4>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Your Email Address\r\n                </label>\r\n                <input\r\n                  type=\"text\"  className=\"form-control\" name=\"seEmail\" onChange={this.handleChange} />\r\n                <small\r\n                  id=\"emailHelp\"\r\n                  className=\"form-text text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Recipient's Email Address\r\n                </label>\r\n                <input\r\n                  type=\"text\"  className=\"form-control\" name=\"reEmail\" onChange={this.handleChange} />\r\n              </div>\r\n              <div>\r\n                <p>You can attache a secret message to this token and deliver to your friend. </p>\r\n                <input\r\n                  type=\"text\"  className=\"form-control\" name=\"message\" onChange={this.handleChange} />\r\n              </div>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-10\" />\r\n                <div className=\"col\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Container>\r\n          <Container>\r\n            {this.state.callback != '' &&\r\n              <div>\r\n                <h4>Here is your Token Information: </h4>\r\n                <p>{this.state.callback}</p>\r\n              </div>\r\n            }\r\n          </Container>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\nclass santaGameCreated extends React.Component {\r\n    render(){\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n          The Game is on!\r\n        </Container>\r\n\r\n      );\r\n    }\r\n}\r\nexport default santaGameCreated;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport retrieveToken from './component/retrieveToken';\r\nimport App from './component/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport santaGameCreated from './component/santaGameCreated'\r\n// Importing the Bootstrap CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"/retrieveToken\" component={retrieveToken} />\r\n      </Switch>\r\n    </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}